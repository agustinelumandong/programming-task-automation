name: Daily Copilot Problem Generator

on:
  schedule:
    - cron: "0 8 * * 1-5" # Weekdays at 8 AM UTC
  workflow_dispatch: # Manual trigger
    inputs:
      topics:
        description: "Comma-separated programming topics for Copilot to explore"
        required: false
        default: "JavaScript arrays, data manipulation, algorithms"
        type: string
      count:
        description: "Number of problems to request"
        required: false
        default: "2"
        type: choice
        options:
          - "1"
          - "2"
          - "3"
          - "4"

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  request-daily-problems:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "day=$(date +'%A')" >> $GITHUB_OUTPUT

      - name: Request Copilot to Generate Daily Problems
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const topics = '${{ github.event.inputs.topics }}' || 'JavaScript arrays, data manipulation, algorithms';
            const count = '${{ github.event.inputs.count }}' || '2';
            const date = '${{ steps.date.outputs.date }}';
            const day = '${{ steps.date.outputs.day }}';

            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `${day} Programming Challenge Generation - ${date}`,
              body: `## Daily Programming Challenge Generation Request

            **Date**: ${day}, ${date}
            **Topics**: ${topics}
            **Requested Count**: ${count} problems

            ---

            **Instructions for @copilot**:

            Welcome to ${day}'s programming challenge session! 

            Please create **${count} unique and creative programming problems** based on these topics: **${topics}**

            ðŸŽ¯ **Challenge Requirements:**

            For each problem, please provide:

            1. **Problem Title** - Creative and descriptive
            2. **Problem Description** - Clear explanation of what needs to be solved
            3. **Real-world Context** - Why this problem matters in practice
            4. **Input Data** - Realistic, meaningful sample data (not trivial examples)
            5. **Expected Output** - Specific requirements for the solution
            6. **Edge Cases** - Important scenarios to handle
            7. **Programming Concepts** - What skills this teaches
            8. **Difficulty Level** - Easy/Medium/Hard with justification

            ðŸ“‹ **Format each problem like this:**

            \`\`\`markdown
            ## Problem: [Creative Title]

            **Difficulty**: [Easy/Medium/Hard]
            **Real-world Context**: [Why this problem is useful]

            **Description**: 
            [Clear, engaging problem description]

            **Input Data**:
            \`\`\`javascript
            // Provide realistic, meaningful data
            [Sample data that makes sense in context]
            \`\`\`

            **Expected Output**:
            - [Specific requirement 1]
            - [Specific requirement 2]
            - [etc...]

            **Edge Cases to Handle**:
            - [Edge case 1]
            - [Edge case 2]

            **Programming Concepts**:
            - [Concept 1]
            - [Concept 2]

            **Why This Matters**: [Educational value explanation]
            \`\`\`

            âœ¨ **Make the problems:**
            - **Engaging and practical** (real-world scenarios)
            - **Progressively challenging** 
            - **Diverse in approach** (different problem-solving patterns)
            - **Educational** (teaching valuable programming concepts)
            - **Creative** (not standard textbook problems)

            Possible problem themes: ${topics}, real-world data processing, user interface logic, API data handling, business logic, optimization challenges, data analysis, creative algorithms.

            @copilot please create engaging and educational programming challenges that will help developers grow their skills!`,
              labels: ['copilot-task', 'daily-challenge', 'problem-generation', `day-${day.toLowerCase()}`],
              assignees: ['copilot']
            });

            console.log(`Created daily problem generation request #${issue.number} for ${day}`);

      - name: Send Daily Challenge Request Notification
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "ðŸŒ… Daily Challenge Generation - ${{ steps.date.outputs.day }}, ${{ steps.date.outputs.date }}"
          html_body: |
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
              <h1 style="color: #0366d6; text-align: center;">ðŸŒ… Daily Challenge Request</h1>
              <h2 style="color: #586069; text-align: center;">${{ steps.date.outputs.day }}, ${{ steps.date.outputs.date }}</h2>
              
              <div style="background-color: #f6f8fa; padding: 20px; border-radius: 6px; margin: 20px 0;">
                <h3>ðŸŽ¯ Generation Request Sent</h3>
                <p>Copilot has been asked to generate <strong>${{ github.event.inputs.count || '2' }}</strong> fresh programming challenges!</p>
                <p><strong>Focus Topics:</strong> ${{ github.event.inputs.topics || 'JavaScript arrays, data manipulation, algorithms' }}</p>
              </div>
              
              <div style="background-color: #e1f5fe; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>ðŸ¤– What Copilot Will Create</h3>
                <p>Each problem will include:</p>
                <ul>
                  <li>Creative and engaging problem titles</li>
                  <li>Real-world context and practical applications</li>
                  <li>Meaningful sample data (not trivial examples)</li>
                  <li>Clear requirements and expected outputs</li>
                  <li>Important edge cases to consider</li>
                  <li>Educational programming concepts</li>
                  <li>Difficulty assessment and justification</li>
                </ul>
              </div>
              
              <div style="background-color: #fff3cd; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>ðŸ”„ Process Flow</h3>
                <p><strong>1.</strong> Copilot analyzes the topics and creates problems</p>
                <p><strong>2.</strong> Generated problems appear as issue comments</p>
                <p><strong>3.</strong> You can create separate issues for individual problems</p>
                <p><strong>4.</strong> Assign specific problems back to Copilot for solutions</p>
                <p><strong>5.</strong> Review and merge Copilot's implementations</p>
              </div>
              
              <div style="background-color: #d4edda; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>ðŸŽ“ Learning Benefits</h3>
                <p>This dynamic system ensures:</p>
                <ul>
                  <li>Fresh, unique challenges every day</li>
                  <li>Varied programming concepts and patterns</li>
                  <li>Real-world applicable problems</li>
                  <li>Progressive skill development</li>
                  <li>Creative problem-solving approaches</li>
                </ul>
              </div>
              
              <p style="margin-top: 30px; color: #586069; font-size: 12px; text-align: center;">
                Repository: ${{ github.repository }}<br>
                Generated: ${{ steps.date.outputs.date }}<br>
                Next: Wait for Copilot's creative programming challenges!
              </p>
            </div>
          to: sean.esparagoza@gmail.com
          from: GitHub Daily Challenge Generator
