name: Copilot Programming Challenge

on:
  schedule:
    - cron: "0 10 * * *" # Daily at 10 AM UTC
  workflow_dispatch: # Manual trigger
    inputs:
      problem_number:
        description: "Problem number to create"
        required: true
        default: "1"
        type: string
      difficulty:
        description: "Problem difficulty"
        required: true
        default: "Medium"
        type: choice
        options:
          - Easy
          - Medium
          - Hard

jobs:
  create-programming-challenge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Problem 3 Issue
        if: github.event.inputs.problem_number == '3' || github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Programming Problem: #3 - Find Students with Highest Grades',
              body: `## Programming Problem

            **Problem Number**: #3

            **Description**: 
            Write a function that finds and prints the names of students who have the highest grades from a given array of student objects.

            **Input Data**:
            \`\`\`javascript
            students = [
              { name: 'marvin', grade: 89 },
              { name: 'kenth', grade: 85 },
              { name: 'jeff', grade: 95 },
            ];
            \`\`\`

            **Expected Output**:
            - Find the highest grade in the array
            - Return/print the names of all students who have that highest grade
            - Handle cases where multiple students have the same highest grade

            **Requirements**:
            - [ ] Implement the solution in JavaScript
            - [ ] Include clear comments explaining the logic
            - [ ] Handle edge cases (empty array, all same grades, etc.)
            - [ ] Provide efficient algorithm implementation
            - [ ] Include example usage and expected output

            **Difficulty Level**: Medium

            **Topics Covered**: 
            - Array manipulation
            - Object property access
            - Finding maximum values
            - Filtering arrays
            - Algorithm optimization

            ---

            **Instructions for @copilot**:
            Please solve this programming problem by:
            1. Analyzing the given student data structure
            2. Implementing an efficient solution to find students with highest grades
            3. Adding comprehensive comments explaining each step
            4. Including example usage with the provided data
            5. Explaining the time and space complexity
            6. Handling edge cases like empty arrays or ties

            @copilot please implement this solution with complete code examples.`,
              labels: ['programming-challenge', 'copilot-task', 'array-manipulation'],
              assignees: ['copilot']
            });

            console.log('Created issue #' + issue.number + ' for Problem 3');

      - name: Create Problem 4 Issue
        if: github.event.inputs.problem_number == '4' || github.event_name == 'schedule'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Programming Problem: #4 - Count Students Who Passed',
              body: `## Programming Problem

            **Problem Number**: #4

            **Description**: 
            Write a function that counts how many students passed the exam (grade >= 70) from a given list of grades.

            **Input Data**:
            \`\`\`javascript
            grades = [85, 42, 78, 91, 55, 73, 88, 39, 67, 94];
            \`\`\`

            **Expected Output**:
            - Count the number of grades that are 70 or above
            - Return the total count of passing students
            - Optionally, also return the list of passing grades

            **Requirements**:
            - [ ] Implement the solution in JavaScript
            - [ ] Include clear comments explaining the logic
            - [ ] Handle edge cases (empty array, no passing grades, etc.)
            - [ ] Provide efficient algorithm implementation
            - [ ] Include example usage and expected output

            **Difficulty Level**: Easy

            **Topics Covered**: 
            - Array filtering
            - Conditional logic
            - Counting algorithms
            - Array methods (filter, reduce)

            ---

            **Instructions for @copilot**:
            Please solve this programming problem by:
            1. Analyzing the given grades array
            2. Implementing an efficient solution to count passing grades (>= 70)
            3. Adding comprehensive comments explaining each step
            4. Including example usage with the provided data
            5. Showing multiple solution approaches (filter, reduce, for loop)
            6. Explaining the time and space complexity
            7. Handling edge cases like empty arrays

            @copilot please implement this solution with multiple approaches and complete code examples.`,
              labels: ['programming-challenge', 'copilot-task', 'array-filtering'],
              assignees: ['copilot']
            });

            console.log('Created issue #' + issue.number + ' for Problem 4');

      - name: Wait for Copilot Processing
        run: |
          echo "Issues created and assigned to @copilot"
          echo "Copilot will now work on solving these programming problems"
          echo "Solutions will be provided as pull requests"

      - name: Send Challenge Creation Notification
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üß© New Programming Challenges Created - ${{ steps.date.outputs.date }}"
          html_body: |
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
              <h2 style="color: #0366d6;">üß© Programming Challenge Alert</h2>
              <p>New programming challenges have been created and assigned to GitHub Copilot!</p>
              
              <div style="background-color: #f6f8fa; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>üìã Today's Challenges</h3>
                <ul>
                  <li><strong>Problem #3:</strong> Find Students with Highest Grades</li>
                  <li><strong>Problem #4:</strong> Count Students Who Passed</li>
                </ul>
              </div>
              
              <div style="background-color: #e1f5fe; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>ü§ñ Copilot Status</h3>
                <p>GitHub Copilot has been assigned these programming challenges and is now working on solutions.</p>
                <p>Expected deliverables:</p>
                <ul>
                  <li>Complete JavaScript implementations</li>
                  <li>Comprehensive code comments</li>
                  <li>Edge case handling</li>
                  <li>Performance analysis</li>
                  <li>Example usage demonstrations</li>
                </ul>
              </div>
              
              <div style="background-color: #fff3cd; padding: 15px; border-radius: 6px; margin: 20px 0;">
                <h3>‚è∞ Next Steps</h3>
                <p>1. Monitor repository for new pull requests from Copilot</p>
                <p>2. Review the proposed solutions</p>
                <p>3. Provide feedback through PR comments if needed</p>
                <p>4. Merge approved solutions</p>
              </div>
              
              <p style="margin-top: 30px; color: #586069; font-size: 12px;">
                Repository: ${{ github.repository }}<br>
                Workflow: ${{ github.workflow }}<br>
                Date: ${{ steps.date.outputs.date }}<br>
                Triggered by: GitHub Actions Automation
              </p>
            </div>
          to: sean.esparagoza@gmail.com
          from: GitHub Programming Challenge System
